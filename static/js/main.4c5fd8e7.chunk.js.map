{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","length","map","id","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAjB,OACtB,8BACG,eAED,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,QCPMI,G,MAAc,SAAC,GAAD,QACzBC,QAAWL,EADc,EACdA,KAAMC,EADQ,EACRA,MAAOK,EADC,EACDA,KADC,OAGzB,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCF,IAEtC,OAED,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SAAoCI,SCb3BC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,OAAS,EACfD,EAASE,KAAI,SAAAL,GAAO,OACpB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQM,OAE5C,mBAAG,UAAQ,oBAAX,4BCLKC,EAAW,SAAC,GAAD,QACtBC,KAAQC,EADc,EACdA,MAAOR,EADO,EACPA,KAAMP,EADC,EACDA,KAAMS,EADL,EACKA,SADL,OAGtB,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,IAGH,cAAC,EAAD,CAAUf,KAAMA,GAAWA,EAAKY,OAGlC,mBAAGT,UAAU,iBAAb,SAA+BI,IAE/B,cAAC,EAAD,CAAaE,SAAUA,QCjBdO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMN,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCa/B,IAAMK,EAAQC,EAAgBP,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cd,MAZmBmB,EAYDL,EAAKK,OAXhBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKY,KAAOO,MACzC,MAWPV,UARuBG,EAQGE,EAAKF,GAPxBU,EAAmBC,QAAO,SAAAjB,GAAO,OAAIA,EAAQkB,SAAWZ,MACxD,QAFT,IAAyBA,EALJO,KAgBRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QCxBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4c5fd8e7.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  </p>\n);\n","export const CommentInfo = ({\n  comment: { name, email, body },\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{body}</div>\n  </div>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length > 0\n      ? comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n      : <b data-cy=\"NoCommentsMessage\">No comments</b>\n      }\n  </div>\n);\n","import './PostInfo.scss';\n\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({\n  post: { title, body, user, comments },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <UserInfo user={user} key={user.id} />\n    </div>\n\n    <p className=\"PostInfo__body\">{body}</p>\n\n    <CommentList comments={comments} />\n\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(id) {\n  return commentsFromServer.filter(comment => comment.postId === id)\n      || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}